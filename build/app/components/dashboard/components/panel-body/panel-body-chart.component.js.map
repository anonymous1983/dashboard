{"version":3,"sources":["components/dashboard/components/panel-body/panel-body-chart.component.ts"],"names":["PanelBodyChart","PanelBodyChart.constructor","PanelBodyChart.ngOnInit","PanelBodyChart.ngAfterViewInit","PanelBodyChart.updateChart","PanelBodyChart.updateChartType"],"mappings":"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","file":"components/dashboard/components/panel-body/panel-body-chart.component.js","sourcesContent":["import {Component, Directive, View, ElementRef, Input, Inject, Attribute} from 'angular2/core';\r\nimport {CORE_DIRECTIVES, FORM_DIRECTIVES, NgClass} from 'angular2/common';\r\nimport {RouteParams} from 'angular2/router';\r\nimport {HTTP_PROVIDERS, Http, RequestOptions, Request, Response, RequestMethod} from 'angular2/http';\r\n\r\nimport {ToClassPipe} from '../../../../common/pipe/atexo.pipe';\r\nimport {AtexoChartsJs} from '../../../../common/components/atexo-charts.component';\r\n\r\ndeclare var Chart:any;\r\n\r\n@Component({\r\n    selector: 'panel-body-chart'\r\n    //inputs: ['panelObj']\r\n})\r\n\r\n@View({\r\n    templateUrl: './app/components/dashboard/components/panel-body/templates/panel-body-chart.tpl.html',\r\n    pipes: [ToClassPipe],\r\n    directives: [AtexoChartsJs]\r\n})\r\n\r\nexport class PanelBodyChart {\r\n\r\n    @Input() panelBodyObj;\r\n\r\n    constructor(private element:ElementRef) {\r\n        this.element = element;\r\n        for (let i = 0; i < this.lineChartSeries.length; i++) {\r\n            this.lineChartSeriesColors.push(this.lineChartColoursOld[i].strokeColor);\r\n            this.lineChartSeriesActive.push(true);\r\n        }\r\n    }\r\n\r\n    private ngOnInit() {\r\n        return true;\r\n    }\r\n\r\n    private ngAfterViewInit() {\r\n        return true;\r\n    }\r\n\r\n    public updateChart(i?:number) {\r\n        // toggle ChartSerie\r\n        this.lineChartSeriesActive[i] = !this.lineChartSeriesActive[i];\r\n\r\n        let _lineChartData = [];\r\n        let _lineChartColours = [];\r\n        for (let j = 0; j < this.lineChartSeriesActive.length; j++) {\r\n            if (this.lineChartSeriesActive[j]) {\r\n                _lineChartColours.push(this.lineChartColoursOld[j]);\r\n                _lineChartData.push(this.lineChartDataOld[j]);\r\n            }\r\n        }\r\n        this.lineChartData = _lineChartData;\r\n        this.lineChartColours = _lineChartColours;\r\n\r\n        return false;\r\n    }\r\n\r\n    public updateChartType(i?:number) {\r\n        this.lineChartType = this.lineChartTypes[i].type;\r\n        for (let j = 0; j < this.lineChartTypes.length; j++) {\r\n            this.lineChartTypes[j].active = false;\r\n            if (j === i) {\r\n                this.lineChartTypes[j].active = true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // lineChart\r\n    private lineChartData:Array<any> = [\r\n        [65, 59, 80, 81, 56, 55, 40],\r\n        [28, 48, 40, 19, 86, 27, 90],\r\n        [18, 48, 77, 9, 100, 27, 40],\r\n        [70, 25, 42, 98, 50, 34, 45]\r\n    ];\r\n    private lineChartDataOld:Array<any> = this.lineChartData;\r\n    private lineChartLabels:Array<any> = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\r\n    private lineChartSeries:Array<any> = ['Series A', 'Series B', 'Series C', 'Series D'];\r\n    private lineChartSeriesColors:Array<any> = [];\r\n    private lineChartSeriesActive:Array<boolean> = [];\r\n    private lineChartOptions:any = {\r\n        animation: false,\r\n        responsive: true,\r\n        multiTooltipTemplate: '<%if (datasetLabel){%><%=datasetLabel %>: <%}%><%= value %>',\r\n        legendTemplate: '<ul class=\"<%=name.toLowerCase()%>-legend\">' +\r\n        '<% for (var i=0; i<datasets.length; i++){%>' +\r\n        '<li>' +\r\n        '<a href=\"\" onclick=\"onClickA\">' +\r\n        '<span style=\"background-color:<%=datasets[i].strokeColor%>\"></span>' +\r\n        '<%if(datasets[i].label){%><%=datasets[i].label%><%}%>' +\r\n        '</a></li><%}%>' +\r\n        '</ul>'\r\n    };\r\n    private lineChartColours:Array<any> = [\r\n        {\r\n            fillColor: 'rgba(253, 216, 53,0.2)',\r\n            strokeColor: 'rgba(253, 216, 53,1)',\r\n            pointColor: 'rgba(253, 216, 53,1)',\r\n            pointStrokeColor: '#fff',\r\n            pointHighlightFill: '#fff',\r\n            pointHighlightStroke: 'rgba(253, 216, 53,0.8)',\r\n            color: 'rgba(0,0,0,1)',\r\n            highlight: 'rgba(0,0,0,0.8)'\r\n        }, {\r\n            fillColor: 'rgba(236, 64, 122,0.2)',\r\n            strokeColor: 'rgba(236, 64, 122,1)',\r\n            pointColor: 'rgba(236, 64, 122,1)',\r\n            pointStrokeColor: '#fff',\r\n            pointHighlightFill: '#fff',\r\n            pointHighlightStroke: 'rgba(236, 64, 122,0.8)',\r\n            color: 'rgba(0,0,0,1)',\r\n            highlight: 'rgba(0,0,0,0.8)'\r\n        }, {\r\n            fillColor: 'rgba(205, 220, 57,0.2)',\r\n            strokeColor: 'rgba(205, 220, 57,1)',\r\n            pointColor: 'rgba(205, 220, 57,1)',\r\n            pointStrokeColor: '#fff',\r\n            pointHighlightFill: '#fff',\r\n            pointHighlightStroke: 'rgba(205, 220, 57,0.8)',\r\n            color: 'rgba(0,0,0,1)',\r\n            highlight: 'rgba(0,0,0,0.8)'\r\n        }, {\r\n            fillColor: 'rgba(41, 182, 246,0.2)',\r\n            strokeColor: 'rgba(41, 182, 246,1)',\r\n            pointColor: 'rgba(41, 182, 246,1)',\r\n            pointStrokeColor: '#fff',\r\n            pointHighlightFill: '#fff',\r\n            pointHighlightStroke: 'rgba(41, 182, 246,0.8)',\r\n            color: 'rgba(0,0,0,1)',\r\n            highlight: 'rgba(0,0,0,0.8)'\r\n        }, {\r\n            fillColor: 'rgba(13, 71, 161,0.2)',\r\n            strokeColor: 'rgba(13, 71, 161,1)',\r\n            pointColor: 'rgba(13, 71, 161,1)',\r\n            pointStrokeColor: '#fff',\r\n            pointHighlightFill: '#fff',\r\n            pointHighlightStroke: 'rgba(13, 71, 161,0.8)',\r\n            color: 'rgba(0,0,0,1)',\r\n            highlight: 'rgba(0,0,0,0.8)'\r\n        }, {\r\n            fillColor: 'rgba(255, 193, 7,0.2)',\r\n            strokeColor: 'rgba(255, 193, 7,1)',\r\n            pointColor: 'rgba(255, 193, 7,1)',\r\n            pointStrokeColor: '#fff',\r\n            pointHighlightFill: '#fff',\r\n            pointHighlightStroke: 'rgba(255, 193, 7,0.8)',\r\n            color: 'rgba(0,0,0,1)',\r\n            highlight: 'rgba(0,0,0,0.8)'\r\n        }];\r\n\r\n    private lineChartColoursOld:Array<any> = this.lineChartColours;\r\n    private lineChartLegend:boolean = false;\r\n    private lineChartType:string = 'Line';\r\n    private lineChartTypes:Array<any> = [\r\n        {\r\n            active: true,\r\n            type: 'Line',\r\n            icons: 'fa fa-line-chart'\r\n        }, {\r\n            active: false,\r\n            type: 'Bar',\r\n            icons: 'fa fa-bar-chart'\r\n        }];\r\n\r\n}"],"sourceRoot":"/source/"}