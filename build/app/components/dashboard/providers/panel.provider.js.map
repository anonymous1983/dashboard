{"version":3,"sources":["components/dashboard/providers/panel.provider.ts"],"names":["PanelProvider","PanelProvider.constructor","PanelProvider.all"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;YAKA;gBAKIA,uBAAYA,IAASA;oBACjBC,IAAIA,CAACA,IAAIA,GAAGA,IAAIA,CAACA;gBACrBA,CAACA;gBAEDD,2BAAGA,GAAHA,UAAIA,UAAkBA;oBAElBE,UAAUA,GAAGA,CAACA,OAAOA,UAAUA,KAAKA,WAAWA,CAACA,GAAGA,UAAUA,GAAGA,kCAAiBA,CAACA,OAAOA,CAACA,KAAKA,CAACA,GAAGA,CAACA,SAASA,CAACA;oBAE9GA,IAAIA,OAAOA,GAAGA,IAAIA,qBAAcA,CAACA;wBAC7BA,MAAMA,EAAEA,kCAAiBA,CAACA,OAAOA,CAACA,KAAKA,CAACA,GAAGA,CAACA,MAAMA;wBAClDA,GAAGA,EAAEA,oBAAIA,CAACA,WAAWA,EAAEA,CAACA,IAAIA,EAAEA,CAACA,OAAOA,CAACA,kCAAiBA,CAACA,OAAOA,CAACA,KAAKA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,KAAKA,EAAEA;wBACvFA,MAAMA,EAAEA,oBAAIA,CAACA,WAAWA,EAAEA,CAACA,cAAcA,EAAEA,CAACA,eAAeA,CAACA,UAAUA,CAACA;qBAC1EA,CAACA,CAACA;oBACHA,IAAIA,GAAGA,GAAGA,IAAIA,cAAOA,CAACA,OAAOA,CAACA,CAACA;oBAC/BA,MAAMA,CAACA,IAAIA,CAACA,IAAIA,CAACA,OAAOA,CAACA,GAAGA,CAACA,CAACA;oBAE9BA,qCAAqCA;oBACrCA,yCAAyCA;gBAC7CA,CAACA;gBAvBLF;oBAACA,iBAAUA,EAAEA;;kCAyBZA;gBAADA,oBAACA;YAADA,CAzBA,AAyBCA,IAAA;YAzBD,yCAyBC,CAAA","file":"components/dashboard/providers/panel.provider.js","sourcesContent":["import {Injectable} from 'angular2/core';\r\nimport {Http, RequestOptions, Request, RequestMethod, URLSearchParams} from 'angular2/http';\r\nimport {Util} from '../../../common/services/atexo.service';\r\nimport {AtexoRestConstant} from '../../../common/constants/atexo.constant';\r\n\r\n@Injectable()\r\nexport class PanelProvider {\r\n    http:Http;\r\n    search:URLSearchParams;\r\n\r\n    constructor(http:Http) {\r\n        this.http = http;\r\n    }\r\n\r\n    all(_parameter?:Object) {\r\n\r\n        _parameter = (typeof _parameter !== 'undefined') ? _parameter : AtexoRestConstant.request.panel.all.parameter;\r\n\r\n        var options = new RequestOptions({\r\n            method: AtexoRestConstant.request.panel.all.method,\r\n            url: Util.getInstance().Rest().setPath(AtexoRestConstant.request.panel.all.url).build(),\r\n            search: Util.getInstance().RequestOptions().setSearchParams(_parameter)\r\n        });\r\n        var req = new Request(options);\r\n        return this.http.request(req);\r\n\r\n        // Or use Get function to get request\r\n        // return this.http.get(this.requestUrl);\r\n    }\r\n\r\n}"],"sourceRoot":"/source/"}