{"version":3,"sources":["common/pipe/atexo/atexo-class.pipe.ts"],"names":["ToClassPipe","ToClassPipe.constructor","ToClassPipe.transform"],"mappings":"AAAA,4CAA4C;AAC5C;;;;GAIG;;;;;;;;;;;;;;;;;;;;;;YAIH;;;;;;;;eAQG;YACH;gBAAAA;gBAOAC,CAACA;gBAJGD,+BAASA,GAATA,UAAUA,KAAYA,EAAEA,IAAaA;oBACjCE,IAAIA,CAACA,SAASA,GAAGA,gBAASA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA,GAAGA,IAAIA,CAACA,CAACA,CAACA,GAAGA,kBAAkBA,CAACA;oBACnEA,MAAMA,CAACA,IAAIA,CAACA,SAASA,CAACA,MAAMA,CAACA,KAAKA,CAACA,WAAWA,EAAEA,CAACA,CAACA;gBACtDA,CAACA;gBANLF;oBAACA,WAAIA,CAACA,EAACA,IAAIA,EAAEA,SAASA,EAACA,CAACA;;gCAOvBA;gBAADA,kBAACA;YAADA,CAPA,AAOCA,IAAA;YAPD,qCAOC,CAAA","file":"common/pipe/atexo/atexo-class.pipe.js","sourcesContent":["// app/common/pipe/atexo/atexo-class.pipe.ts\r\n/**\r\n *\r\n * @name atexo-class.pipe.ts\r\n *\r\n */\r\n\r\nimport {Pipe, PipeTransform} from 'angular2/core';\r\nimport {isPresent } from 'angular2/src/facade/lang';\r\n/*\r\n * Build custom class type category\r\n * Takes an exponent argument that defaults to 'type-'.\r\n * Usage:\r\n *   value | toClass:exponent\r\n * Example:\r\n *   {{ 'list' |  toClass:'type-'}}\r\n *   formats to: 'type-list'\r\n */\r\n@Pipe({name: 'toClass'})\r\nexport class ToClassPipe implements PipeTransform {\r\n    postClass:string;\r\n    transform(value:string, args:string[]) : any {\r\n        this.postClass = isPresent(args[0]) ? args[0] : 'panel-body-type-';\r\n        return this.postClass.concat(value.toLowerCase());\r\n    }\r\n}"],"sourceRoot":"/source/"}