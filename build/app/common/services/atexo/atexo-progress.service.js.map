{"version":3,"sources":["common/services/atexo/atexo-progress.service.ts"],"names":["Progress","Progress.constructor","Progress.getInstance","Progress.getNbrProgress","Progress.showBackdrop","Progress.incrementNbrProgress","Progress.decrementNbrProgress"],"mappings":"AAAA,sDAAsD;AACtD;;;;GAIG;;;;;;;;;;;;;;;;;;;YAIH;gBAMIA;oBAJAC,gBAAWA,GAAUA,CAACA,CAACA;oBAKnBA,EAAEA,CAACA,CAACA,CAACA,QAAQA,CAACA,UAAUA,CAACA,CAACA,CAACA;wBACvBA,MAAMA,IAAIA,KAAKA,CAACA,wDAAwDA,CAACA,CAACA;oBAC9EA,CAACA;gBACLA,CAACA;gBAEMD,oBAAWA,GAAlBA;oBACIE,EAAEA,CAACA,CAACA,QAAQA,CAACA,QAAQA,IAAIA,IAAIA,CAACA,CAACA,CAACA;wBAC5BA,QAAQA,CAACA,UAAUA,GAAGA,IAAIA,CAACA;wBAC3BA,QAAQA,CAACA,QAAQA,GAAGA,IAAIA,QAAQA,EAAEA,CAACA;wBACnCA,QAAQA,CAACA,UAAUA,GAAGA,KAAKA,CAACA;oBAChCA,CAACA;oBACDA,MAAMA,CAACA,QAAQA,CAACA,QAAQA,CAACA;gBAC7BA,CAACA;gBAEDF,iCAAcA,GAAdA;oBACIG,MAAMA,CAACA,IAAIA,CAACA,WAAWA,CAACA;gBAC5BA,CAACA;gBAEDH,+BAAYA,GAAZA;oBACII,MAAMA,CAACA,IAAIA,CAACA,cAAcA,EAAEA,CAACA;gBACjCA,CAACA;gBAEDJ,uCAAoBA,GAApBA;oBACIK,IAAIA,CAACA,WAAWA,EAAEA,CAACA;gBACvBA,CAACA;gBAEDL,uCAAoBA,GAApBA;oBACIM,EAAEA,CAACA,CAACA,IAAIA,CAACA,WAAWA,KAAKA,CAACA,CAACA,CAACA,CAACA;wBACzBA,IAAIA,CAACA,WAAWA,EAAEA,CAACA;oBACvBA,CAACA;gBACLA,CAACA;gBAjCMN,mBAAUA,GAAWA,KAAKA,CAACA;gBAJtCA;oBAACA,iBAAUA,EAAEA;;6BAsCZA;gBAADA,eAACA;YAADA,CAtCA,AAsCCA,IAAA;YAtCD,+BAsCC,CAAA","file":"common/services/atexo/atexo-progress.service.js","sourcesContent":["// app/common/services/atexo/atexo-progress.service.ts\r\n/**\r\n *\r\n * @name atexo-progress.service.ts\r\n *\r\n */\r\n\r\nimport {Injectable} from 'angular2/core';\r\n\r\n@Injectable()\r\nexport class Progress {\r\n    nbrProgress:number = 0;\r\n    static instance:Progress;\r\n    static isCreating:Boolean = false;\r\n\r\n    constructor() {\r\n        if (!Progress.isCreating) {\r\n            throw new Error('[Progress] You can\\'t call new in Singleton instances!');\r\n        }\r\n    }\r\n\r\n    static getInstance() {\r\n        if (Progress.instance == null) {\r\n            Progress.isCreating = true;\r\n            Progress.instance = new Progress();\r\n            Progress.isCreating = false;\r\n        }\r\n        return Progress.instance;\r\n    }\r\n\r\n    getNbrProgress() {\r\n        return this.nbrProgress;\r\n    }\r\n\r\n    showBackdrop() {\r\n        return this.getNbrProgress();\r\n    }\r\n\r\n    incrementNbrProgress() {\r\n        this.nbrProgress++;\r\n    }\r\n\r\n    decrementNbrProgress() {\r\n        if (this.nbrProgress !== 0) {\r\n            this.nbrProgress--;\r\n        }\r\n    }\r\n}"],"sourceRoot":"/source/"}